<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mapper.TMallValueMapper">
  <resultMap id="BaseResultMap" type="com.atguigu.bean.TMallValue">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="shxzh" jdbcType="VARCHAR" property="shxzh" />
    <result column="shfqy" jdbcType="VARCHAR" property="shfqy" />
    <result column="shxm_id" jdbcType="INTEGER" property="shxmId" />
    <result column="shxzh_mch" jdbcType="VARCHAR" property="shxzhMch" />
    <result column="chjshj" jdbcType="TIMESTAMP" property="chjshj" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, shxzh, shfqy, shxm_id, shxzh_mch, chjshj
  </sql>
  <select id="selectByExample" parameterType="com.atguigu.bean.TMallValueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_mall_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_mall_value
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_mall_value
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.atguigu.bean.TMallValueExample">
    delete from t_mall_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insertSelective" parameterType="com.atguigu.bean.TMallValue">
    insert into t_mall_value
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="shxzh != null">
        shxzh,
      </if>
      <if test="shfqy != null">
        shfqy,
      </if>
      <if test="shxmId != null">
        shxm_id,
      </if>
      <if test="shxzhMch != null">
        shxzh_mch,
      </if>
      <if test="chjshj != null">
        chjshj,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shxzh != null">
        #{shxzh,jdbcType=VARCHAR},
      </if>
      <if test="shfqy != null">
        #{shfqy,jdbcType=VARCHAR},
      </if>
      <if test="shxmId != null">
        #{shxmId,jdbcType=INTEGER},
      </if>
      <if test="shxzhMch != null">
        #{shxzhMch,jdbcType=VARCHAR},
      </if>
      <if test="chjshj != null">
        #{chjshj,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.bean.TMallValueExample" resultType="java.lang.Long">
    select count(*) from t_mall_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_mall_value
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shxzh != null">
        shxzh = #{record.shxzh,jdbcType=VARCHAR},
      </if>
      <if test="record.shfqy != null">
        shfqy = #{record.shfqy,jdbcType=VARCHAR},
      </if>
      <if test="record.shxmId != null">
        shxm_id = #{record.shxmId,jdbcType=INTEGER},
      </if>
      <if test="record.shxzhMch != null">
        shxzh_mch = #{record.shxzhMch,jdbcType=VARCHAR},
      </if>
      <if test="record.chjshj != null">
        chjshj = #{record.chjshj,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_mall_value
    set Id = #{record.id,jdbcType=INTEGER},
      shxzh = #{record.shxzh,jdbcType=VARCHAR},
      shfqy = #{record.shfqy,jdbcType=VARCHAR},
      shxm_id = #{record.shxmId,jdbcType=INTEGER},
      shxzh_mch = #{record.shxzhMch,jdbcType=VARCHAR},
      chjshj = #{record.chjshj,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.bean.TMallValue">
    update t_mall_value
    <set>
      <if test="shxzh != null">
        shxzh = #{shxzh,jdbcType=VARCHAR},
      </if>
      <if test="shfqy != null">
        shfqy = #{shfqy,jdbcType=VARCHAR},
      </if>
      <if test="shxmId != null">
        shxm_id = #{shxmId,jdbcType=INTEGER},
      </if>
      <if test="shxzhMch != null">
        shxzh_mch = #{shxzhMch,jdbcType=VARCHAR},
      </if>
      <if test="chjshj != null">
        chjshj = #{chjshj,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.bean.TMallValue">
    update t_mall_value
    set shxzh = #{shxzh,jdbcType=VARCHAR},
      shfqy = #{shfqy,jdbcType=VARCHAR},
      shxm_id = #{shxmId,jdbcType=INTEGER},
      shxzh_mch = #{shxzhMch,jdbcType=VARCHAR},
      chjshj = #{chjshj,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.atguigu.bean.TMallValue">
    insert into t_mall_value (Id, shxzh, shfqy,
    shxm_id, shxzh_mch, chjshj
    )
    values (#{id,jdbcType=INTEGER}, #{shxzh,jdbcType=VARCHAR}, #{shfqy,jdbcType=VARCHAR},
    #{shxmId,jdbcType=INTEGER}, #{shxzhMch,jdbcType=VARCHAR}, #{chjshj,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertVlues" parameterType="com.atguigu.bean.TMallValue">
    insert into t_mall_value (shxzh,
    shxm_id, shxzh_mch
    )
    VALUES
    <foreach collection="listvalue" item="val" separator=",">
      (#{val.shxzh},#{attr_id},#{val.shxzhMch})
    </foreach>
  </insert>
</mapper>